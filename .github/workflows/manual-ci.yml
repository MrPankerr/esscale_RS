name: Manual CI

on:
  workflow_dispatch:  # Ручной запуск

jobs:
  backend-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [Ubuntu-latest, windows-latest]
    timeout-minutes: 30

    steps:
      - name: Get repository code
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      # Установка зависимостей на Ubuntu
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'Ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ libboost-all-dev libssl-dev

      # Установка зависимостей на Windows
      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          choco install openssl
          vcpkg install boost:x64-windows
          vcpkg integrate install

      # Сборка ServerLib
      - name: Configure and build ServerLib
        working-directory: ./backend/ServerLib
        shell: bash
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --parallel 4

      # Сборка ServerS
      - name: Configure and build ServerS
        working-directory: ./backend/ServerS
        shell: bash
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --parallel 4

  frontend-build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Get repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"
          channel: stable
          cache: true

      - name: Install dependencies
        working-directory: ./frontend
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs
        env:
          FLUTTER_PUB_CACHE: /tmp/flutter_pub_cache

      - name: Run tests
        working-directory: ./frontend
        run: flutter test --test-randomize-ordering-seed=random

      - name: Build release APK
        working-directory: ./frontend
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: ./frontend/build/app/outputs/flutter-apk/app-release.apk
